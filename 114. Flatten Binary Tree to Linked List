# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        recFlatten(self,root)

def recFlatten(self,root:TreeNode):
    if root == None:
        return root
    
    left = root.left
    right = root.right
    if left:
        root.right = left
        root.left = None
        root = recFlatten(self,left)
        
    if right:
        root.right = right 
        root = recFlatten(self,right)
    
    return root
       
