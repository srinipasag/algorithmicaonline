# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        print (root.val)
        if not root:
            return 
        q  = deque([root])
        
        while q:
            
            for i in range(len(q)):
                tmp = q.popleft()
                

                if tmp.left:
                    q.append(tmp.left)
                if tmp.right:
                    q.append(tmp.right)
                
                print("1-->", tmp.val)
                if tmp != root:
                    root.right = tmp
                    root.left = None
                    print("         2-->", root.val)
                    root = root.right
            #print (root)
            #print (q)
