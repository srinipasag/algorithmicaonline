71. Simplify Path
Medium

Given an absolute path for a file (Unix-style), simplify it. Or in other words, convert it to the canonical path.

In a UNIX-style file system, a period '.' refers to the current directory. Furthermore, a double period '..' moves the directory up a level.

Note that the returned canonical path must always begin with a slash '/', and there must be only a single slash '/' between two directory names. The last directory name (if it exists) must not end with a trailing '/'. Also, the canonical path must be the shortest string representing the absolute path.

class Solution:
    def simplifyPath(self, path: str) -> str:
        paths = path.split('/')
        st = []
        print("the path is", paths)
        for p in paths:
            if p == '' or p == ',' or p == '.':
                continue
            elif p == '..':
                if len(st):
                    st.pop()
            else:
                st.append(p)
        print(st)
        return '/'+'/'.join(st)
