# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDiffInBST(self, root: TreeNode) -> int:
        if not root:
            return 0
        def inorder(root,l):
            if not root:
                return 
            inorder(root.left,l)
            l.append(root.val)
            inorder(root.right, l)
            
        l = []
        m = float(inf)
        inorder(root, l)
        print(len(l))
        for i in range(len(l)-1):
            m = min(m,l[i+1]-l[i])
        print(m)
        return m
            
        
